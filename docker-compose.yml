version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: invoice-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: invoice_generator
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - invoice-network

  # Invoice Generator App
  invoice-app:
    build: .
    container_name: invoice-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGO_URI: mongodb://admin:password123@mongodb:27017/invoice_generator?authSource=admin
      JWT_SECRET: your_super_secure_jwt_secret_key_change_in_production
      JWT_EXPIRE: 7d
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_FROM: ${EMAIL_FROM}
    depends_on:
      - mongodb
    volumes:
      - invoice_storage:/app/backend/storage
      - app_logs:/app/backend/logs
    networks:
      - invoice-network

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: invoice-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - invoice-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: invoice-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - invoice-app
    networks:
      - invoice-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  invoice_storage:
    driver: local
  app_logs:
    driver: local

networks:
  invoice-network:
    driver: bridge
